# Given an integer n, return a string array answer (1-indexed) where:
# answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
# answer[i] == "Fizz" if i is divisible by 3.
# answer[i] == "Buzz" if i is divisible by 5.
# answer[i] == i (as a string) if none of the above conditions are true.
# Example 1:
# Input: n = 3
# Output: ["1","2","Fizz"]
# Example 2:
# Input: n = 5
# Output: ["1","2","Fizz","4","Buzz"]
# Example 3:
# Input: n = 15
# Output: ["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]

# method: find whatever has .0. numbers=numbers+[str] is slow. better use numbers.append(str)
class Solution:
    def fizzBuzz(n):#self, n: int) -> List[str]:
        numbers=[]
        if n>0:
            for i in range(1,n+1):
                if (str(i/3)).find(".0") != -1 and (str(i/5)).find(".0") != -1:
                    numbers=numbers+["FizzBuzz"]
                elif (str(i/3)).find(".0") != -1 and (str(i/5)).find(".0") == -1:
                    numbers=numbers+["Fizz"]
                elif (str(i/3)).find(".0") == -1 and (str(i/5)).find(".0") != -1:
                    numbers=numbers+["Buzz"] 
                else:
                    numbers=numbers+[str(i)]
        return numbers
