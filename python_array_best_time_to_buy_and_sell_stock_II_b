#You are given an integer array prices where prices[i] is the price of a given stock on the ith day.
#On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.
#Find and return the maximum profit you can achieve.
#prices = [7,1,5,3,6,4]

class Solution:
    def maxProfit(prices):
        summ=0
        if len(prices) != 1:
            for i in range(len(prices)-1):
                if (prices[i+1] == prices[-(i+1)]) and ((int(len(prices)/2))-2 < i < (int(len(prices)/2))+2):  # case 1 if there is an even number in nums prices[i+2] last step is to do with left sided summ.case 2 to check whether index is at centre of list.
                    if prices[i+1]>prices[i]:
                        summ += prices[i+1]-prices[i]
                    break
                if (prices[i] == prices[-(i+1)]) and ((int(len(prices)/2))-1 < i < (int(len(prices)/2))+1): # case 2 uneven number.
                    break
                if prices[i+1]>prices[i]:
                    summ += prices[i+1]-prices[i]
                if prices[-(i+2)]<prices[-(i+1)]:
                    summ += prices[-(i+1)]-prices[-(i+2)]         
        return summ
